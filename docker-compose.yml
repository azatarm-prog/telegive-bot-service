version: '3.8'

services:
  bot-service:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/telegive_bot
      - REDIS_URL=redis://redis:6379/0
      - TELEGIVE_AUTH_URL=http://auth-service:5001
      - TELEGIVE_CHANNEL_URL=http://channel-service:5002
      - TELEGIVE_GIVEAWAY_URL=http://giveaway-service:5003
      - TELEGIVE_PARTICIPANT_URL=http://participant-service:5004
      - TELEGIVE_MEDIA_URL=http://media-service:5005
      - WEBHOOK_BASE_URL=https://your-domain.com
      - SERVICE_PORT=5000
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=telegive_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: telegive-network

